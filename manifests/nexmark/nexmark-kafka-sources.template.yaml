apiVersion: v1
kind: ConfigMap
metadata:
  name: nexmark-kafka-sources-${BENCHMARK_JOB_NAME}
  namespace: ${BENCHMARK_NAMESPACE}
data:
  create.sql: |
    create source person
        (
        "id" BIGINT,
        "name" VARCHAR,
        "email_address" VARCHAR,
        "credit_card" VARCHAR,
        "city" VARCHAR,
        "state" VARCHAR,
        "date_time" TIMESTAMP,
        "extra" VARCHAR
    )
    with (
      connector = 'kafka',
      topic = 'nexmark-person',
      properties.bootstrap.server = '${BENCHMARK_KAFKA_NAME}.${BENCHMARK_NAMESPACE}:9092',
      scan.startup.mode = 'earliest'
    ) FORMAT PLAIN ENCODE JSON;

    create source auction (
        "id" BIGINT,
        "item_name" VARCHAR,
        "description" VARCHAR,
        "initial_bid" BIGINT,
        "reserve" BIGINT,
        "date_time" TIMESTAMP,
        "expires" TIMESTAMP,
        "seller" BIGINT,
        "category" BIGINT,
        "extra" VARCHAR
    )
    with (
      connector = 'kafka',
      topic = 'nexmark-auction',
      properties.bootstrap.server = '${BENCHMARK_KAFKA_NAME}.${BENCHMARK_NAMESPACE}:9092',
      scan.startup.mode = 'earliest'
    ) FORMAT PLAIN ENCODE JSON;

    create source bid (
        "auction" BIGINT,
        "bidder" BIGINT,
        "price" BIGINT,
        "channel" VARCHAR,
        "url" VARCHAR,
        "date_time" TIMESTAMP,
        "extra" VARCHAR
    )
    with (
      connector = 'kafka',
      topic = 'nexmark-bid',
      properties.bootstrap.server = '${BENCHMARK_KAFKA_NAME}.${BENCHMARK_NAMESPACE}:9092',
      scan.startup.mode = 'earliest'
    ) FORMAT PLAIN ENCODE JSON;
  drop.sql:
    drop source person;
    drop source auction;
    drop source bid;
  create_combined.sql: |
    CREATE SOURCE nexmark (
      event_type BIGINT,
      person STRUCT<"id" BIGINT,
                    "name" VARCHAR,
                    "email_address" VARCHAR,
                    "credit_card" VARCHAR,
                    "city" VARCHAR,
                    "state" VARCHAR,
                    "date_time" TIMESTAMP,
                    "extra" VARCHAR>,
      auction STRUCT<"id" BIGINT,
                    "item_name" VARCHAR,
                    "description" VARCHAR,
                    "initial_bid" BIGINT,
                    "reserve" BIGINT,
                    "date_time" TIMESTAMP,
                    "expires" TIMESTAMP,
                    "seller" BIGINT,
                    "category" BIGINT,
                    "extra" VARCHAR>,
      bid STRUCT<"auction" BIGINT,
                "bidder" BIGINT,
                "price" BIGINT,
                "channel" VARCHAR,
                "url" VARCHAR,
                "date_time" TIMESTAMP,
                "extra" VARCHAR>,
      p_time TIMESTAMPTZ as proctime()
    ) WITH (
      connector = 'kafka',
      topic = 'nexmark-events',
      properties.bootstrap.server = '${BENCHMARK_KAFKA_NAME}.${BENCHMARK_NAMESPACE}:9092',
      scan.startup.mode = 'earliest'
    ) FORMAT PLAIN ENCODE JSON;

    CREATE VIEW bid 
    AS
    SELECT (bid).auction, (bid).bidder, (bid).price, (bid).channel, (bid).url, (bid).date_time, (bid).extra, p_time FROM nexmark WHERE event_type = 2;

    CREATE VIEW auction 
    AS
    SELECT (auction).id, (auction).item_name, (auction).description, (auction).initial_bid, (auction).reserve, (auction).date_time, (auction).expires, (auction).seller, (auction).category, (auction).extra, p_time FROM nexmark WHERE event_type = 1;
    
    CREATE VIEW person 
    AS
    SELECT (person).id, (person).name, (person).email_address, (person).credit_card, (person).city, (person).state, (person).date_time, (person).extra, p_time FROM nexmark WHERE event_type = 0;
  drop_combined.sql:
    drop VIEW person;
    drop VIEW auction;
    drop VIEW bid;
    drop source nexmark;
  create_watermark.sql: |
    create source person
        (
        "id" BIGINT,
        "name" VARCHAR,
        "email_address" VARCHAR,
        "credit_card" VARCHAR,
        "city" VARCHAR,
        "state" VARCHAR,
        "date_time" TIMESTAMP,
        "extra" VARCHAR,
        WATERMARK FOR "date_time" AS "date_time" - interval '5' second
    )
    with (
      connector = 'kafka',
      topic = 'nexmark-person',
      properties.bootstrap.server = '${BENCHMARK_KAFKA_NAME}.${BENCHMARK_NAMESPACE}:9092',
      scan.startup.mode = 'earliest'
    ) FORMAT PLAIN ENCODE JSON;

    create source auction (
        "id" BIGINT,
        "item_name" VARCHAR,
        "description" VARCHAR,
        "initial_bid" BIGINT,
        "reserve" BIGINT,
        "date_time" TIMESTAMP,
        "expires" TIMESTAMP,
        "seller" BIGINT,
        "category" BIGINT,
        "extra" VARCHAR,
        WATERMARK FOR "date_time" AS "date_time" - interval '5' second
    )
    with (
      connector = 'kafka',
      topic = 'nexmark-auction',
      properties.bootstrap.server = '${BENCHMARK_KAFKA_NAME}.${BENCHMARK_NAMESPACE}:9092',
      scan.startup.mode = 'earliest'
    ) FORMAT PLAIN ENCODE JSON;

    create source bid (
        "auction" BIGINT,
        "bidder" BIGINT,
        "price" BIGINT,
        "channel" VARCHAR,
        "url" VARCHAR,
        "date_time" TIMESTAMP,
        "extra" VARCHAR,
        WATERMARK FOR "date_time" AS "date_time" - interval '5' second
    )
    with (
      connector = 'kafka',
      topic = 'nexmark-bid',
      properties.bootstrap.server = '${BENCHMARK_KAFKA_NAME}.${BENCHMARK_NAMESPACE}:9092',
      scan.startup.mode = 'earliest'
    ) FORMAT PLAIN ENCODE JSON;
  create_combined_watermark.sql: |
    CREATE SOURCE nexmark (
      event_type BIGINT,
      person STRUCT<"id" BIGINT,
                    "name" VARCHAR,
                    "email_address" VARCHAR,
                    "credit_card" VARCHAR,
                    "city" VARCHAR,
                    "state" VARCHAR,
                    "date_time" TIMESTAMP,
                    "extra" VARCHAR>,
      auction STRUCT<"id" BIGINT,
                    "item_name" VARCHAR,
                    "description" VARCHAR,
                    "initial_bid" BIGINT,
                    "reserve" BIGINT,
                    "date_time" TIMESTAMP,
                    "expires" TIMESTAMP,
                    "seller" BIGINT,
                    "category" BIGINT,
                    "extra" VARCHAR>,
      bid STRUCT<"auction" BIGINT,
                "bidder" BIGINT,
                "price" BIGINT,
                "channel" VARCHAR,
                "url" VARCHAR,
                "date_time" TIMESTAMP,
                "extra" VARCHAR>, 
      p_time TIMESTAMPTZ as proctime(),
      date_time TIMESTAMP AS
                CASE
                    WHEN event_type = 0 THEN (person).date_time
                    WHEN event_type = 1 THEN (auction).date_time
                    ELSE (bid).date_time
                END,
       WATERMARK FOR date_time AS date_time - INTERVAL '5' SECOND
    ) WITH (
      connector = 'kafka',
      topic = 'nexmark-events',
      properties.bootstrap.server = '${BENCHMARK_KAFKA_NAME}.${BENCHMARK_NAMESPACE}:9092',
      scan.startup.mode = 'earliest'
    ) FORMAT PLAIN ENCODE JSON;

    CREATE VIEW bid 
    AS
    SELECT (bid).auction, (bid).bidder, (bid).price, (bid).channel, (bid).url, (bid).extra, p_time, date_time FROM nexmark WHERE event_type = 2;

    CREATE VIEW auction 
    AS
    SELECT (auction).id, (auction).item_name, (auction).description, (auction).initial_bid, (auction).reserve, (auction).expires, (auction).seller, (auction).category, (auction).extra, p_time, date_time FROM nexmark WHERE event_type = 1;
    
    CREATE VIEW person 
    AS
    SELECT (person).id, (person).name, (person).email_address, (person).credit_card, (person).city, (person).state, (person).extra, p_time, date_time FROM nexmark WHERE event_type = 0;
